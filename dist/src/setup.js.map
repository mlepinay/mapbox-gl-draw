{"version":3,"sources":["../../src/setup.js"],"names":["events","require","Store","ui","Constants","module","exports","ctx","controlContainer","mapLoadedInterval","setup","onRemove","map","off","connect","clearInterval","removeButtons","removeEventListeners","container","store","parentNode","removeChild","addLayers","addEventListeners","onAdd","getContainer","addButtons","options","boxSelect","boxZoom","disable","dragPan","enable","loaded","on","setInterval","start","addSource","sources","COLD","data","type","geojsonTypes","FEATURE_COLLECTION","features","HOT","styles","forEach","addLayer","style","render","removeLayers","getLayer","id","removeLayer","getSource","removeSource"],"mappings":"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","file":"setup.js","sourcesContent":["const events = require('./events');\nconst Store = require('./store');\nconst ui = require('./ui');\nconst Constants = require('./constants');\n\nmodule.exports = function(ctx) {\n\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n\n  const setup = {\n    onRemove: function() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n\n      // setup.removeLayers();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n\n      return this;\n    },\n    connect: function() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.events.addEventListeners();\n    },\n    onAdd: function(map) {\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        map.boxZoom.disable();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n      }\n\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => { if (map.loaded()) setup.connect(); }, 16);\n      }\n\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers: function() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      // hot features style\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      ctx.options.styles.forEach(style => {\n        ctx.map.addLayer(style);\n      });\n\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers: function() {\n      ctx.options.styles.forEach(style => {\n        if (ctx && ctx.map && ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n\n      if (ctx && ctx.map && ctx.map.getSource(Constants.sources.COLD)) {\n        ctx.map.removeSource(Constants.sources.COLD);\n      }\n\n      if (ctx && ctx.map && ctx.map.getSource(Constants.sources.HOT)) {\n        ctx.map.removeSource(Constants.sources.HOT);\n      }\n    }\n  };\n\n  ctx.setup = setup;\n\n  return setup;\n};"]}